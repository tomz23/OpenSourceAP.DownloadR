% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02_class_function.R
\name{OpenAP}
\alias{OpenAP}
\title{OpenAP Download}
\description{
A package that allows to download data from the Open Source Asset Pricing (OpenAP) directly in R.
The package enables users to access two primary types of data:
\enumerate{
\item \strong{Predictor Portfolio Returns}:
\itemize{
\item Access 212 cross-sectional predictors.
\item Download portfolio returns using various portfolio construction methods, including original paper methods, deciles, quintiles, equal-weighted, value-weighted, price filters and more.
}
\item \strong{Firm Characteristics}:
\itemize{
\item Access 209 firm characteristics from OpenAP (+ 3 additional characteristics from CRSP (Price, Size, Short-term Reversal)).
}
}

Learn more about OpenAP: \href{https://openassetpricing.com}{Data webside} | \href{https://github.com/OpenSourceAP/CrossSection}{GitHub code} | \href{https://www.nowpublishers.com/article/Details/CFR-0112}{Publication}
}
\examples{

## ------------------------------------------------
## Method `OpenAP$new`
## ------------------------------------------------

openap_instance <- OpenAP$new(release_year = 2023)

## ------------------------------------------------
## Method `OpenAP$list_port`
## ------------------------------------------------

openap_instance$list_port()

## ------------------------------------------------
## Method `OpenAP$get_url`
## ------------------------------------------------

openap_instance$get_url("nyse")

## ------------------------------------------------
## Method `OpenAP$dl_port`
## ------------------------------------------------

data <- openap_instance$dl_port("deciles_ew", predictor = c("Accruals"))

## ------------------------------------------------
## Method `OpenAP$get_individual_signal_url`
## ------------------------------------------------

url <- openap_instance$get_individual_signal_url("Accruals.csv")

## ------------------------------------------------
## Method `OpenAP$dl_signal`
## ------------------------------------------------

signals <- openap_instance$dl_signal(predictor = c("BM"))

## ------------------------------------------------
## Method `OpenAP$dl_all_signals`
## ------------------------------------------------

signals_data <- openap_instance$dl_all_signals()

## ------------------------------------------------
## Method `OpenAP$dl_signal_doc`
## ------------------------------------------------

signal_doc <- openap_instance$dl_signal_doc()
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name_id_map}}{A mapping between names and their corresponding IDs in the OpenAP database.}

\item{\code{individual_signal_id_map}}{A mapping of unique identifiers for individual signals.}

\item{\code{signal_sign}}{The direction or "sign" of the signal (i.e. positive or negative).}

\item{\code{url}}{The base URL for downloading OpenAP data.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OpenAP-new}{\code{OpenAP$new()}}
\item \href{#method-OpenAP-list_port}{\code{OpenAP$list_port()}}
\item \href{#method-OpenAP-get_url}{\code{OpenAP$get_url()}}
\item \href{#method-OpenAP-dl_port}{\code{OpenAP$dl_port()}}
\item \href{#method-OpenAP-get_individual_signal_url}{\code{OpenAP$get_individual_signal_url()}}
\item \href{#method-OpenAP-dl_signal_crsp3}{\code{OpenAP$dl_signal_crsp3()}}
\item \href{#method-OpenAP-merge_crsp_with_signals}{\code{OpenAP$merge_crsp_with_signals()}}
\item \href{#method-OpenAP-apply_sign_logic}{\code{OpenAP$apply_sign_logic()}}
\item \href{#method-OpenAP-dl_signal}{\code{OpenAP$dl_signal()}}
\item \href{#method-OpenAP-dl_all_signals}{\code{OpenAP$dl_all_signals()}}
\item \href{#method-OpenAP-dl_signal_doc}{\code{OpenAP$dl_signal_doc()}}
\item \href{#method-OpenAP-clone}{\code{OpenAP$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-new"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-new}{}}}
\subsection{Method \code{new()}}{
Initializes the OpenAP class instance with data for the specified release year (or per default with the latest data).
Loads mappings, individual signal IDs and signal documentation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$new(release_year = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{release_year}}{}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{openap_instance <- OpenAP$new(release_year = 2023)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-list_port"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-list_port}{}}}
\subsection{Method \code{list_port()}}{
Returns a list of available portfolio types for the OpenAP dataset, depending on the specified release year.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$list_port()}\if{html}{\out{</div>}}
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{openap_instance$list_port()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-get_url"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-get_url}{}}}
\subsection{Method \code{get_url()}}{
Retrieves the URL for a specific dataset based on its name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$get_url(data_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the Portfolio.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{openap_instance$get_url("nyse")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-dl_port"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-dl_port}{}}}
\subsection{Method \code{dl_port()}}{
Downloads portfolio data for a specified data set and optionally filters by predictor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$dl_port(data_name, predictor = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_name}}{The name of the data set.}

\item{\code{predictor}}{A vector of predictor names to filter (optional).}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{data <- openap_instance$dl_port("deciles_ew", predictor = c("Accruals"))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-get_individual_signal_url"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-get_individual_signal_url}{}}}
\subsection{Method \code{get_individual_signal_url()}}{
Retrieves the URL for an individual signal based on its name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$get_individual_signal_url(signal_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{signal_name}}{The name of the signal to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A string representing the URL of the signal.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{url <- openap_instance$get_individual_signal_url("Accruals.csv")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-dl_signal_crsp3"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-dl_signal_crsp3}{}}}
\subsection{Method \code{dl_signal_crsp3()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$dl_signal_crsp3()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-merge_crsp_with_signals"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-merge_crsp_with_signals}{}}}
\subsection{Method \code{merge_crsp_with_signals()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$merge_crsp_with_signals(signals, crsp_data)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-apply_sign_logic"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-apply_sign_logic}{}}}
\subsection{Method \code{apply_sign_logic()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$apply_sign_logic(data, predictors, signal_sign, signed = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-dl_signal"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-dl_signal}{}}}
\subsection{Method \code{dl_signal()}}{
Downloads specific firm  characteristics.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$dl_signal(predictor = NULL, signed = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{predictor}}{A vector of predictor names to download.}

\item{\code{signed}}{Logical; whether to apply signed transformation based on signal documentation.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A data frame containing the signal data.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{signals <- openap_instance$dl_signal(predictor = c("BM"))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-dl_all_signals"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-dl_all_signals}{}}}
\subsection{Method \code{dl_all_signals()}}{
Downloads all firm level characteristics from the release folder.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$dl_all_signals(signed = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame containing all firm level characteristics.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{signals_data <- openap_instance$dl_all_signals()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-dl_signal_doc"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-dl_signal_doc}{}}}
\subsection{Method \code{dl_signal_doc()}}{
Downloads the signal documentation CSV for the release.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$dl_signal_doc()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A data frame containing the signal documentation.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{signal_doc <- openap_instance$dl_signal_doc()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenAP-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OpenAP-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenAP$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
